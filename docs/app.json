[{"name":"app.R","content":"library(shiny)\r\n\r\n# Define UI for app that draws a histogram ----\r\nui <- fluidPage(\r\n  \r\n  # App title ----\r\n  titlePanel(\"STA 3180: Statistical Modeling Visualizations\"),\r\n  sidebarLayout(position = \"right\",\r\n                sidebarPanel(\"By: Aaron Upchurch & Max LoGalbo\"),\r\n                mainPanel(\r\n                  h3(\"Applets\"),\r\n                  h5(a(\"Tutorial\", href = \"http://127.0.0.1:7446/Tutorial/Index.html\")),\r\n                  h5(a(\"Logistic Regression\", href = \"http://127.0.0.1:7446/Logistic Regression/Index.html\"))\r\n                  ,h5(a(\"Boostrapping\", href =       \"http://127.0.0.1:7446/Bootstrapping/Index.html\")),\r\n                  h5(a(\"Cross Validation\", href = \"http://127.0.0.1:7446/Cross Validation/Index.html\")),\r\n                  h5(a(\"Decision Trees\", href = \"http://127.0.0.1:7446/Decision Trees/Index.html\"))\r\n                  )\r\n  )\r\n\r\n)\r\n\r\n# Define server logic required to draw a histogram ----\r\nserver <- function(input, output) {\r\n  \r\n  # Histogram of the Old Faithful Geyser Data ----\r\n  # with requested number of bins\r\n  # This expression that generates a histogram is wrapped in a call\r\n  # to renderPlot to indicate that:\r\n  #\r\n  # 1. It is \"reactive\" and therefore should be automatically\r\n  #    re-executed when inputs (input$bins) change\r\n  # 2. Its output type is a plot\r\n\r\n    \r\n  \r\n  \r\n}\r\n\r\nlibrary(shiny)\r\n\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"}]
